makeFundFlowsTicker() => __financial_tickerid(syminfo.tickerid, "FUND_FLOWS", "D")
makeNavTicker() => __financial_tickerid(syminfo.tickerid, "NAV", "D")
makeNavAllTicker() => __financial_tickerid(syminfo.tickerid, "NAV_ALL", "D")
makeAumTicker() => __financial_tickerid(syminfo.tickerid, "AUM", "D")
getFundTF() => timeframe.isintraday ? "1D" : timeframe.period

msInOneDay = 86400000

sumYTD()=>
	max_bars_back(time, oneYear)
	max_bars_back(close, oneYear)
	var firstBar = time
	if barstate.islast
		if year(timenow, syminfo.timezone) == year(firstBar, syminfo.timezone)
			na
		else
			sum = 0.
			for i = 0 to bar_index
				if year[i] < year
					break
				sum += close[i]
			sum


perfYTD()=>
	max_bars_back(time, oneYear)
	max_bars_back(close, oneYear)
    if barstate.islast
		if year(timenow, syminfo.timezone) > year
			na
		else
			lastI = 0
			for i = 0 to bar_index
				if year[i] < year
					lastI := i - 1
					break

			perf = if (close[lastI] < 0 and close > 0) or close[lastI] == 0
				na
			else
				(close - close[lastI]) / math.abs(close[lastI])

			perf


fund_flowsYTD = request.security(makeFundFlowsTicker(), getFundTF(), sumYTD(), ignore_invalid_symbol=true, gaps=barmerge.gaps_off)

navPerfYTD = request.security(makeNavTicker(), getFundTF(), perfYTD(), ignore_invalid_symbol=true, gaps=barmerge.gaps_off)

aumPerfYTD = request.security(makeAumTicker(), getFundTF(), perfYTD(), ignore_invalid_symbol=true, gaps=barmerge.gaps_off)

navTotalReturnYTD = request.security(makeNavAllTicker(), getFundTF(), perfYTD(), ignore_invalid_symbol=true, gaps=barmerge.gaps_off)

plot(fund_flowsYTD, title="fund_flows.YTD")

plot(navTotalReturnYTD, title="nav_total_return.YTD")

plot(navPerfYTD, title="nav_perf.YTD")

plot(aumPerfYTD, title="aum_perf.YTD")